Object subclass: #Cultivo	instanceVariableNames: 'precio nombre'	classVariableNames: ''	package: 'tp objetos'!Object subclass: #Empresa	instanceVariableNames: 'lista_propietarios lista_parcelas historial'	classVariableNames: ''	package: 'tp objetos'!!Empresa methodsFor: 'as yet unclassified' stamp: 'Anonymous 9/25/2022 23:48'!registrarCosecha: codigoParcela rendimientoPorHectarea: valor precioActualCultivo: precio fecha: fecha"Deja la parcela disponible para ser vuelta a sembrar y conservará el registro histórico tanto de siembra como de cosecha para ser consultado en el futuro. Devuelve la instancia de Parcela para la cual se ha registrado una cosecha."	|auxParcela|		lista_parcelas do: [ :i| (i getID = codigoParcela) ifTrue:  [  i setValor: valor.																					  i setPrecio: precio.																					 i setFecha: fecha .																					  auxParcela := i deepCopy .																					  historial add: auxParcela .																																											  i setEstado: 'libre'.																					  i setCultivo: nil.																					 ^ i.																					   ] .																	   "ifFalse: [^'F']"							] 																			 ! !!Empresa methodsFor: 'as yet unclassified' stamp: 'Anonymous 9/19/2022 09:52'!incorporarParcelaAlquilada: codigoParcela hectareas: cant costoAlquiler: importe dniPropietario:dni"Incorpora o agrega a la lista de Parcelas una parcela del tipo alquilada.Devuelve una instancia de ParcelaAlquilada. Si no existe ningúnpropietario con documento dni, deberá retornar nil y no realizar ningunamodificación."	|parcela|	parcela := ParcelaAlquilada nuevaParcelaAlquilada: codigoParcela  hectareas: cant  costoAlquiler: importe dniPropietario: dni .			lista_propietarios detect: [ :i | (i getDni = dni) ifTrue: [ lista_parcelas add: parcela .																					^parcela.																					] ifFalse: [ ^nil ] ].! !!Empresa methodsFor: 'as yet unclassified' stamp: 'Anonymous 9/27/2022 17:52'!calcularPagoPropietarioUltCosecha:codigoParcela"Calcula y devuelve el importe a pagar al propietario a raíz de la última cosecha en la parcela indicada."		|pago|		(historial select: [ :i | ( i getID = codigoParcela )]) do:[ :j| (j class = ParcelaAcuerdo ) ifTrue: [  																																		pago := nil.																																		pago := (j getPrecio * j getHectarias * j getValor) * (j getGastos / 100).																																		] ifFalse: [																																			 	   pago := nil.																					   																pago := j getGastos.																																		 			  ]																					] .	^ pago .! !!Empresa methodsFor: 'as yet unclassified' stamp: 'Anonymous 9/24/2022 14:22'!registrarSiembra: codigoParcela cultivo: nombreCultivo fecha: fecha"Registra la siembra en la parcela indicada (chequear que la misma no esté sembrada en este momento). Devuelve una instancia de Siembra"	|auxParcela|		lista_parcelas do: [ :i| (i getID = codigoParcela) ifTrue:  [											(i getEstado = 'libre') ifTrue: [ i setEstado: nombreCultivo fecha: fecha.																																												"auxParcela := i deepCopy .																						historial add: auxParcela ."																																												^i.] ifFalse: [^'error parcela ocupada']] 																			]! !!Empresa methodsFor: 'as yet unclassified' stamp: 'Anonymous 9/14/2022 11:33'!registrarDatosPropietario: unDni nombre: unNombre apellido: unApellido	|propietario|		propietario := Propietario nuevoProp: unDni nombre: unNombre apellido: unApellido.		lista_propietarios add: propietario.! !!Empresa methodsFor: 'as yet unclassified' stamp: 'Anonymous 9/23/2022 18:33'!inicializar	lista_propietarios := OrderedCollection new.	lista_parcelas := OrderedCollection new.	historial := OrderedCollection new.! !!Empresa methodsFor: 'as yet unclassified' stamp: 'Anonymous 9/23/2022 19:14'!cambiarEstado: unEstado parcela: unaId	lista_parcelas do: [ :i| (i getID = unaId) ifTrue: [ i setEstado: unEstado ]  ]. ! !!Empresa methodsFor: 'as yet unclassified' stamp: 'Anonymous 9/27/2022 17:21'!calcularGananciaTotal:codigoParcela"Calcula y retorna la ganancia total histórica obtenida por la empresa agropecuaria en la parcela indicada (suma de las ganancias de todas las cosechas usando la misma fórmula del método anterior)."	|ganancia ganancia_acum|		ganancia_acum := 0.		(historial select: [ :i | ( i getID = codigoParcela )]) do:[ :j| (j class = ParcelaAcuerdo ) ifTrue: [  																																		ganancia := nil.																																		ganancia := (j getPrecio * j getHectarias * j getValor) * (j getGastos / 100).																																		ganancia_acum := ganancia_acum + ganancia .																																		] ifFalse: [																																			 	   ganancia := nil.																					   																ganancia := (j getPrecio * j getHectarias * j getValor) - j getGastos.																																					ganancia_acum := ganancia_acum + ganancia .																																		 			  ]																					] .	^ ganancia_acum .! !!Empresa methodsFor: 'as yet unclassified' stamp: 'Anonymous 9/27/2022 16:44'!incorporarParcelaAcuerdo: codigoParcela hectareas: cant porcentajeAcordado: porcentaje dniPropietario:dni"Incorpora o agrega a la lista de Parcelas una parcela del tipo acuerdo.Si no existe ningún propietario con documento dni, deberá retornar nil yno realizar ninguna modificación. En caso contrario retorna una instanciade ParcelaAcuerdo."	|parce |		"lista_parcelas detect: [ :j| (j getID = codigoParcela) ifTrue: [ ^nil] ifFalse:["				"-------------------------------no borrar esta parte------------------------------------"			parce := ParcelaAcuerdo parcelaAcuerdonew: codigoParcela  hectareas: cant porcentajeAcordado: porcentaje  dniPropietario: dni.		lista_propietarios detect: [ :i|  (i getDni = dni) ifTrue: [ lista_parcelas add: parce.																					^parce . ] 																	  ifFalse: [^nil. ] ]. 	"----------------------------------------------------------------------------------------"	 "] ]."														 ! !!Empresa methodsFor: 'as yet unclassified' stamp: 'Anonymous 9/14/2022 11:52'!incorporarParcelaPropia: codigoParcela hectareas: cant costoImpuestos: importe"Incorpora o agrega a la lista de Parcelas una parcela del tipo propia.Retorna una instancia de ParcelaPropia"	|parcela|		parcela := ParcelaPropia nuevaParce:codigoParcela hectareas: cant costoImpuestos: importe.		lista_parcelas add: parcela.		^parcela.! !!Empresa methodsFor: 'as yet unclassified' stamp: 'Anonymous 9/27/2022 17:51'!calcularGananciaUltimaCosecha: codigoParcela"Calcula y devuelve la ganancia obtenida por la empresa agropecuaria en la última cosecha en la parcela indicada. Esta se obtiene de la siguiente manera:ganancia = precio del cultivo x cantidad de hectáreas de la parcela x rendimiento por hectárea - gastosLos gastos serán el alquiler, los impuestos, el porcentaje a pagar al propietario (según corresponda). "	|ganancia aux|		(historial select: [ :i | ( i getID = codigoParcela )]) do:[ :j| (j class = ParcelaAcuerdo ) ifTrue: [  																																		ganancia := nil.																																		aux := 0.																																		aux := (j getPrecio * j getHectarias * j getValor) * (j getGastos / 100).																																		ganancia := (j getPrecio * j getHectarias * j getValor) - aux.																																		] ifFalse: [																																			 	   ganancia := nil.																					   																ganancia := (j getPrecio * j getHectarias * j getValor) - j getGastos.																																		 			  ]																					] .	^ ganancia ."	|ganancia|		historial do: [ :i :j | ( (i getID = codigoParcela) & (j getID = codigoParcela) ) ifTrue: [ 																																(i getFecha > j getFecha) ifTrue: [ 																																											ganancia := (i getPrecio * i getHectarias * i 																																											getValor )																																											 ] 																																] 							].												^ ganancia ."! !"-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- "!Empresa class	instanceVariableNames: ''!!Empresa class methodsFor: 'as yet unclassified' stamp: 'Anonymous 9/14/2022 11:06'!nuevaEmpresa^super new inicializar! !Object subclass: #Parcela	instanceVariableNames: 'codigo_parcela hectareas estado cultivo fechaCultivo valor precio'	classVariableNames: ''	package: 'tp objetos'!!Parcela methodsFor: 'as yet unclassified' stamp: 'Anonymous 9/26/2022 19:38'!getFecha	^fechaCultivo.! !!Parcela methodsFor: 'as yet unclassified' stamp: 'Anonymous 9/19/2022 09:55'!getID	^codigo_parcela.! !!Parcela methodsFor: 'as yet unclassified' stamp: 'Anonymous 9/27/2022 01:12'!getHectarias		^ hectareas ! !!Parcela methodsFor: 'as yet unclassified' stamp: 'Anonymous 9/23/2022 12:37'!getEstado	^ estado.! !!Parcela methodsFor: 'as yet unclassified' stamp: 'Anonymous 9/27/2022 01:11'!getValor 	^ valor.! !!Parcela methodsFor: 'as yet unclassified' stamp: 'Anonymous 9/27/2022 01:11'!getPrecio	^ precio.! !!Parcela methodsFor: 'initialization' stamp: 'Anonymous 9/23/2022 18:37'!setEstado: nombreCultivo fecha: fecha	cultivo := nombreCultivo.	fechaCultivo := fecha .	estado := 'ocupado'.! !!Parcela methodsFor: 'initialization' stamp: 'Anonymous 9/26/2022 19:22'!setFecha: unaFecha	fechaCultivo := unaFecha asDate .! !!Parcela methodsFor: 'initialization' stamp: 'Anonymous 9/25/2022 23:45'!setPrecio: unPrecio	precio := unPrecio .! !!Parcela methodsFor: 'initialization' stamp: 'Anonymous 9/23/2022 19:10'!setEstado: unEstado	estado := unEstado .! !!Parcela methodsFor: 'initialization' stamp: 'Anonymous 9/25/2022 23:41'!setValor: unValor	valor := unValor.! !!Parcela methodsFor: 'initialization' stamp: 'Anonymous 9/25/2022 23:48'!setCultivo: unCultivo	cultivo := unCultivo .! !Parcela subclass: #ParcelaAcuerdo	instanceVariableNames: 'porcentaje propietario'	classVariableNames: ''	package: 'tp objetos'!!ParcelaAcuerdo methodsFor: 'as yet unclassified' stamp: 'Anonymous 9/23/2022 12:35'!inicializar: codigoParcela hectareas: cant porcentajeAcordado: unporcentaje dniPropietario:dni	codigo_parcela := codigoParcela.	hectareas := cant.	porcentaje := unporcentaje.	propietario := dni.		estado := 'libre'.! !!ParcelaAcuerdo methodsFor: 'as yet unclassified' stamp: 'Anonymous 9/27/2022 15:34'!getGastos 	^ porcentaje .! !"-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- "!ParcelaAcuerdo class	instanceVariableNames: ''!!ParcelaAcuerdo class methodsFor: 'as yet unclassified' stamp: 'Anonymous 9/22/2022 18:47'!parcelaAcuerdonew:codigoParcela hectareas: cant porcentajeAcordado: porcentaje dniPropietario:dni ^super new inicializar: codigoParcela hectareas: cant porcentajeAcordado: porcentaje dniPropietario:dni! !Parcela subclass: #ParcelaAlquilada	instanceVariableNames: 'costoAlquiler propietario'	classVariableNames: ''	package: 'tp objetos'!!ParcelaAlquilada methodsFor: 'as yet unclassified' stamp: 'Anonymous 9/27/2022 15:33'!getGastos 	^ costoAlquiler .! !!ParcelaAlquilada methodsFor: 'as yet unclassified' stamp: 'Anonymous 9/23/2022 12:36'!inicializar: codigoParcela hectareas: cant costoAlquiler: importe dniPropietario:dni	codigo_parcela := codigoParcela.	hectareas := cant.	costoAlquiler := importe.	propietario := dni.		estado := 'libre' .! !"-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- "!ParcelaAlquilada class	instanceVariableNames: ''!!ParcelaAlquilada class methodsFor: 'as yet unclassified' stamp: 'Anonymous 9/19/2022 09:03'!nuevaParcelaAlquilada: codigoParcela hectareas: cant costoAlquiler: importe dniPropietario:dni	^super new inicializar: codigoParcela hectareas: cant costoAlquiler: importe dniPropietario:dni! !Parcela subclass: #ParcelaPropia	instanceVariableNames: 'gastosImpositivos'	classVariableNames: ''	package: 'tp objetos'!!ParcelaPropia methodsFor: 'as yet unclassified' stamp: 'Anonymous 9/27/2022 15:33'!getGastos	^ gastosImpositivos .! !!ParcelaPropia methodsFor: 'as yet unclassified' stamp: 'Anonymous 9/23/2022 12:36'!inicializar: unCodigoParcela hectareas: unaCant costoImpuestos: unImporte	hectareas := unaCant.	codigo_parcela := unCodigoParcela.	gastosImpositivos := unImporte .		estado := 'libre' .! !"-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- "!ParcelaPropia class	instanceVariableNames: ''!!ParcelaPropia class methodsFor: 'as yet unclassified' stamp: 'Anonymous 9/14/2022 11:48'!nuevaParce:codigoParcela hectareas: cant costoImpuestos: importe	^super new inicializar: codigoParcela hectareas: cant costoImpuestos: importe.! !Object subclass: #Propietario	instanceVariableNames: 'nombre apellido dni'	classVariableNames: ''	package: 'tp objetos'!!Propietario methodsFor: 'as yet unclassified' stamp: 'Anonymous 9/19/2022 09:16'!getDni	^dni.! !!Propietario methodsFor: 'as yet unclassified' stamp: 'Anonymous 9/14/2022 11:29'!inicializar:unDni nombre: unNombre apellido: unApellido	dni := unDni .	nombre := unNombre.	apellido := unApellido.! !"-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- "!Propietario class	instanceVariableNames: ''!!Propietario class methodsFor: 'as yet unclassified' stamp: 'Anonymous 9/14/2022 11:29'!nuevoProp: unDni nombre: unNombre apellido: unApellido	^super new inicializar:unDni nombre: unNombre apellido: unApellido.! !Object subclass: #Siembra	instanceVariableNames: 'fecha'	classVariableNames: ''	package: 'tp objetos'!